// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model Account {
  id                 String               @id @default(cuid())
  name               String
  email              String               @unique
  password           String
  photo              String?
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  active             Boolean              @default(false)
  ActivateToken      ActivateToken[]
  PasswordResetToken PasswordResetToken[]

  @@map("accounts")
}

model ActivateToken {
  id          String    @id @default(cuid())
  token       String    @unique
  activatedAt DateTime?
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  accountId   String
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  
  @@map("activate_tokens")
}

model PasswordResetToken {
  id        String    @id @default(cuid())
  token     String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  resetAt   DateTime?
  accountId String
  account   Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  @@map("password_reset_tokens")
}